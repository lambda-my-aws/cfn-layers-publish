---
Description: >-
  Pipeline to release Lambda layers publicly when new release is created

Metadata:
  Version: '2019-06-19'
  Author: John Mille john@lambda-my-aws.io
  Licence: Apache 2.0

Parameters:
  PackageName:
    Type: String
  LayerName:
    Type: String
  GitHubRepo:
    Type: String
  GitHubOwner:
    Type: String
  GitHubOAuthToken:
    Type: String
    NoEcho: true
  BranchName:
    Type: String
    Default: master

Resources:
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${LayerName}.${AWS::Region}'
  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'cloudformation.${AWS::URLSuffix}'
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'codebuild.${AWS::URLSuffix}'
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:PutObject
                  - s3:PutObjectVersion
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - !Sub '${ArtifactsBucket.Arn}/*'
          PolicyName: LambdaLayers-CodeBuild
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - codebuild:Get*
                  - codebuild:BatchGet*
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: LambdaLayers-S3Access
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'codepipeline.${AWS::URLSuffix}'
        Version: '2012-10-17'
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:PutObject
                  - s3:PutObjectVersion
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - !Sub '${ArtifactsBucket.Arn}/*'
          PolicyName: LambdaLayers-S3Access
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Effect: Allow
                Resource: '*'
          PolicyName: LambdaLayers-CodeBuildAccess
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - !Sub 'cloudformation.${AWS::URLSuffix}'
                Effect: Allow
                Resource: '*'
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                Effect: Allow
                Resource: '*'
          PolicyName: LambdaLayers-PassRole
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - lambda:Invoke
                  - lambda:InvokeFunction
                  - lambda:List*
                  - lambda:Get*
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: Pipeline-LambdaAccess

  Python37Build:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Description: !Sub 'Builds layer for ${LayerName} in python3.7'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref ArtifactsBucket
          - Name: PACKAGE_NAME
            Type: PLAINTEXT
            Value: !Ref PackageName
          - Name: LAYER_NAME
            Type: PLAINTEXT
            Value: !Ref LayerName
        Image: aws/codebuild/standard:2.0
        Type: LINUX_CONTAINER
      Source:
        Type: CODEPIPELINE

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactsBucket
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt 'CodePipelineRole.Arn'
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Branch: !Ref BranchName
                OAuthToken: !Ref 'GitHubOAuthToken'
                Owner: !Ref GitHubOwner
                PollForSourceChanges: false
                Repo: !Ref GitHubRepo
              Name: SourceCode
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: '1'
          Name: SourceCode
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref Python37Build
              InputArtifacts:
                - Name: SourceCode
              Name: !Ref Python37Build
              OutputArtifacts:
                - Name: LayerBuild
              RunOrder: '1'
          Name: !Sub 'Build-${LayerName}'
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt 'CloudformationRole.Arn'
                StackName: !Sub 'lambdalayer-${LayerName}'
                TemplatePath: !Sub 'LayerBuild::cfn/${LayerName}/layer_template.yml'
                TemplateConfiguration: !Sub 'LayerBuild::cfn/${LayerName}/layer_config.json'
                Capabilities: 'CAPABILITY_AUTO_EXPAND'
              InputArtifacts:
                - Name: LayerBuild
              Name: DeployLayer
              RunOrder: '1'
          Name: !Sub 'Release-${LayerName}'
  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: 'GITHUB_HMAC'
      AuthenticationConfiguration:
        SecretToken: !Ref 'GitHubOAuthToken'
      Filters:
        - JsonPath: ".$refs"
          MatchEquals: ".$refs/tags/*"
      Name: !Sub '${LayerName}-NewTagPushed'
      RegisterWithThirdParty: True
      TargetAction: SourceCode
      TargetPipeline: !Ref Pipeline
      TargetPipelineVersion: !GetAtt 'Pipeline.Version'
